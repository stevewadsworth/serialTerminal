{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Terminal.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { onMount } from \"svelte\";\n\timport serial from \"./modules/serial\"\n\timport Terminal from \"./Terminal.svelte\"\n\n\texport let name;\n\n\tlet ports = [];\n\n    onMount(async function() {\n\t\tports = await serial.listPorts()\n\t})\n</script>\n\n<main>\n\t<h1>Hello {name}!</h1>\n\t<p>Visit the <a href=\"https://svelte.dev/tutorial\">Svelte tutorial</a> to learn how to build Svelte apps.</p>\n\t{#each ports as item}\n\t\t<p>{item.path}</p>\n\t{/each}\n</main>\n<Terminal path={'/dev/tty.SLAB_USBtoUART'}/>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n  import { onMount, beforeUpdate, afterUpdate } from \"svelte\";\n  import serial from \"./modules/serial\";\n\n  export let path = \"\";\n  export let baudRate = 115200;\n  export let dataBits = 8;\n  export let parity = \"none\";\n  export let stopBits = 1;\n  export let localEcho = true;\n\n  let div;\n  let autoscroll;\n  let rxData = [];\n  let acc = [];\n  let line = \"\";\n\n  onMount(async function() {\n    const port = serial.openPort(path, baudRate, dataBits, parity, stopBits);\n    const parser = serial.addReadlineParser(port);\n    parser.on(\"data\", chunk => {\n      acc.push(chunk);\n      rxData = acc;\n    });\n\n    document.onkeypress = e => {\n      console.log(e);\n      // Auto scroll to the bottom on keypress\n      div.scrollTo(0, div.scrollHeight);\n      let key = e.key;\n      if (e.keyCode === 13) {\n        key = \"\\n\";\n      }\n      port.write(key);\n\n      if (localEcho) {\n        acc.push(key);\n        rxData = acc;\n      }\n    };\n  });\n\n  beforeUpdate(() => {\n    // Only scroll if we are at the bottom already\n    autoscroll =\n      div && div.offsetHeight + div.scrollTop > div.scrollHeight - 20;\n  });\n\n  afterUpdate(() => {\n    if (autoscroll) {\n      div.scrollTo(0, div.scrollHeight);\n    }\n  });\n</script>\n\n<style>\n  div {\n    height: 100%;\n    width: max-content;\n    overflow: scroll;\n  }\n\n  div > pre {\n    text-align: left;\n    margin: 0;\n    font-family: \"Courier New\", Courier, monospace;\n  }\n</style>\n\n<div bind:this={div}>\n  {#each rxData as line}\n    <pre>{line}</pre>\n  {/each}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAwBC,IAAI,cAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AACD,EAAE,cAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC,AACD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;ACgBA,GAAG,8BAAC,CAAC,AACH,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,WAAW,CAClB,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,kBAAG,CAAG,GAAG,eAAC,CAAC,AACT,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,AAChD,CAAC"
}